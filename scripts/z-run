#!/dev/null




::// debug / ...
::// release / ...
::// dependencies / ...
::// docs / ...
::// cargo / ...
::// workspace / ...
::// *




:: debug / build / lib :: exec -- "${ZRUN[@]}" ':: cargo / tool' build --lib -- "${@}"
:: release / build / lib :: exec -- "${ZRUN[@]}" ':: cargo / tool' build --lib --release -- "${@}"


:: debug / check / lib :: exec -- "${ZRUN[@]}" ':: cargo / tool' check --lib -- "${@}"
:: release / check / lib :: exec -- "${ZRUN[@]}" ':: cargo / tool' check --lib --release -- "${@}"


:: debug / build / tests / workspace :: export -- RUSTC_BOOTSTRAP=1 ; exec -- "${ZRUN[@]}" ':: cargo / tool' build --workspace --tests -- "${@}"
:: debug / check / tests / workspace :: export -- RUSTC_BOOTSTRAP=1 ; exec -- "${ZRUN[@]}" ':: cargo / tool' check --workspace --tests -- "${@}"
:: debug / run / tests / workspace :: export -- RUSTC_BOOTSTRAP=1 ; exec -- "${ZRUN[@]}" ':: cargo / tool' test --workspace -- "${@}"
:: debug / run / bench / workspace :: export -- RUSTC_BOOTSTRAP=1 ; exec -- "${ZRUN[@]}" ':: cargo / tool' bench --workspace -- "${@}"


:: docs / crate / internals / build :: exec -- "${ZRUN[@]}" ':: cargo / tool' doc --lib --no-deps --document-private-items "${@}"
:: docs / crate / exports / build :: exec -- "${ZRUN[@]}" ':: cargo / tool' doc --lib --no-deps "${@}"
:: docs / dependencies / build :: exec -- "${ZRUN[@]}" ':: cargo / tool' doc --lib "${@}"
:: docs / open :: exec -- x-www guest:volution-rust-libraries open "file://$( exec -- readlink -e -- "./.outputs/target/doc/vrl/index.html" )"




:: cargo / debug / build :: exec -- "${ZRUN[@]}" ':: cargo / tool' build "${@}"
:: cargo / release / build :: exec -- "${ZRUN[@]}" ':: cargo / tool' build --release "${@}"

:: cargo / debug / check :: exec -- "${ZRUN[@]}" ':: cargo / tool' check "${@}"
:: cargo / release / check :: exec -- "${ZRUN[@]}" ':: cargo / tool' check --release "${@}"




:: dependencies / tree :: exec -- "${ZRUN[@]}" ':: cargo / tool' tree "${@}"
:: dependencies / licenses :: exec -- "${ZRUN[@]}" ':: cargo / tool' license --all-features --avoid-build-deps --avoid-dev-deps "${@}"
:: dependencies / update :: exec -- "${ZRUN[@]}" ':: cargo / tool' update --aggressive "${@}"
:: dependencies / outdated :: exec -- "${ZRUN[@]}" ':: cargo / tool' outdated "${@}"
:: dependencies / duplicates :: exec -- "${ZRUN[@]}" ':: cargo / tool' duplicates "${@}"
:: dependencies / audit :: exec -- "${ZRUN[@]}" ':: cargo / tool' audit "${@}"
:: dependencies / geiger :: exec -- "${ZRUN[@]}" ':: cargo / tool' geiger --output-format Ascii "${@}"
:: dependencies / bom :: exec -- "${ZRUN[@]}" ':: cargo / tool' cyclonedx --all --format json "${@}"




<< cargo / tool
	test "${#}" -ge 1
	_outputs="$( exec -- readlink -e -- ./.outputs )"
	_sources="$( exec -- readlink -e -- ./sources )"
	
	export -- CARGO_TARGET_DIR="${_outputs}/target"
	
	cd -- "${_sources}/workspace"
	
	exec -- \
		nice -n 19 -- \
	cargo \
		"${@}" \
	#
!!




<< workspace / initialize / rust
	test "${#}" -eq 0
	_outputs="$( exec -- readlink -e -- ./.outputs )"
	
	_target="${_outputs}/target"
	_release="${_outputs}/release"
	_debug="${_outputs}/debug"
	
	for _folder in "${_target}" "${_release}" "${_debug}" ; do
		if test ! -e "${_folder}" ; then
			mkdir -- "${_folder}"
		fi
	done
	
	ln -s -T -f -- ../release "${_target}/release"
	ln -s -T -f -- ../debug "${_target}/debug"
!!


<< workspace / initialize / outputs
	test "${#}" -eq 0
	if test ! -d ./.outputs ; then
		_outputs_store="${TMPDIR:-/tmp}/volution-rust-libraries--${UID}--${RANDOM}-${RANDOM}-${RANDOM}-${RANDOM}"
		mkdir -- "${_outputs_store}"
		_outputs_store="$( exec -- readlink -e -- "${_outputs_store}" )"
		ln -s -f -T -- "${_outputs_store}" ./.outputs
	fi
!!

